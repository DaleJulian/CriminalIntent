package com.bignerdranch.android.criminalintent;

import java.io.IOException;

import android.annotation.TargetApi;
//import android.graphics.Camera;
import android.hardware.Camera;
import android.hardware.Camera.Size;
import android.os.Build;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

public class CrimeCameraFragment extends Fragment {

	private static final String TAG = "CrimeCameraFragment";
	
	private Camera mCamera;
	private SurfaceView mSurfaceView;
	
	@TargetApi(9)
	@Override
	public void onResume(){
		super.onResume();
		if(Build.VERSION.SDK_INT > Build.VERSION_CODES.GINGERBREAD){
			mCamera = Camera.open(0);
		} else { 
			mCamera = Camera.open();
		}
	}
	
	@Override
	public void onPause(){
		super.onPause();
		
		if(mCamera != null){
			mCamera.release();
			mCamera = null;
		}
	}
	
	@Override
	@SuppressWarnings("deprecation")
	public View onCreateView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState){
		View v = inflater.inflate(R.layout.fragment_crime_camera, parent, false);
		
		Button takePictureButton = (Button)v.findViewById(R.id.crime_camera_takePictureButton);
		takePictureButton.setOnClickListener(new View.OnClickListener() {
			
			public void onClick(View v) {
				getActivity().finish();
				
			}
		});
		
		mSurfaceView = (SurfaceView)v.findViewById(R.id.crime_camera_surfaceView);
		SurfaceHolder holder = mSurfaceView.getHolder();
		holder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
		
		holder.addCallback(new SurfaceHolder.Callback() {
			
			public void surfaceDestroyed(SurfaceHolder holder) {
				//tell the camera to use this surface as its preview area
				try{
					if(mCamera != null)
						mCamera.setPreviewDisplay(holder);
				}
				catch (IOException e){
					Log.e(TAG, "Error setting up preview display.");
				}
			}
			
			public void surfaceCreated(SurfaceHolder holder) {
				//we can no longer display on this surface, so stop the preview
				if(mCamera != null) mCamera.stopPreview();
				
			}
			
			public void surfaceChanged(SurfaceHolder holder, int format, int width,
					int height) {
				if(mCamera == null) return;
				//the surface has changed size, update the camera preview size
				Camera.Parameters parameters = mCamera.getParameters();
				Size s = null; //to be reset in the next section
				parameters.setPreviewSize(s.width, s.height);
				mCamera.setParameters(parameters);
				try{
					mCamera.startPreview();
				}
				catch (Exception e){
					Log.e(TAG, "Could not start preview", e);
					mCamera.release();
					mCamera = null;
				}
				
			}
		});
		
		
		return v;
	}
	
	
}
